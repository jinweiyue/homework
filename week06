import processing.pdf.*;
String imageName = "IMG_4699.jpg";
int sampleNum = 30000;
int noiseDivideIndex = 100;
float segmentLength = 50;
float lineWeightThrehold = 0.4;
int countNumOfLines;
int singleLineLength = 3;

PImage img;
float xOff = 0.0;
float yOff = 0.0;
float x, y;
ArrayList<Brush> brushes;
boolean savePDF;

void settings() {
  img = loadImage(imageName);
  size(img.width, img.height);
}

void setup() {
  img.loadPixels();
  brushes = new ArrayList<Brush>();
  for (int i = 0; i < 50; i++) {
    brushes.add(new Brush());
  }
 
}

void draw() {
  background(#FFE6BF);
  stroke(0);
  for (Brush brush : brushes) {
    brush.paint();
  }
  if (savePDF) {
    beginRecord(PDF, "output/noise"+"s"+".pdf");
  }  
  if (savePDF == true) {
    endRecord();
    savePDF = false;
  }
  println("countNumOfLines: "+countNumOfLines);
  noLoop();
}

float get_grey_from_image(PImage im, int x, int y) {
  float r = red(im.pixels[x + y*im.width]);
  float g = green(im.pixels[x + y*im.width]);
  float b = blue(im.pixels[x + y*im.width]);
  float luminosity = (0.21*r + 0.72*g + 0.07*b) / 255.0;
  return luminosity;
}

void keyPressed() {
  if (key == 'r') {
    countNumOfLines = 0;
    loop();
  }
  if (key == 'p') {
    savePDF = true;
    loop();
  }
}



class Brush {
  float angle;
  int components[];
  float x, y;
  color clr;
  
  Brush() {
    angle = random(TWO_PI);    
    clr = color(random(255), random(255), random(255), 5);
    components = new int[2];
    for (int i = 0; i < 2; i++) {
      components[i] = int(random(1, 5));
    }
  }
  
  void paint() {
    float a = 0;
    float r = 0;
    //float x1 = x;
    //float y1 = y;
    float u = random(0.5, 1);
        for (int p = 0; p < sampleNum; p += 1) {
    x = random(img.width);
    y = random(img.height);
    for (int k = 0; k < singleLineLength; k ++) {
      float x1 = x + width/2 - img.width/2;
      float y1 = y + height/2 - img.height/2;
      float x2 = x1 + segmentLength*(noise(x/noiseDivideIndex*1000, y/noiseDivideIndex)-0.5);
      float y2 = y1 + segmentLength*(noise(y/noiseDivideIndex*1000, x/noiseDivideIndex)-0.5);
      float lum = brightness(img.get(int(x), int(y)))/255;
      if (lum < lineWeightThrehold) {
        strokeWeight(map(lum, 0, lineWeightThrehold, 2, 0.1));
        //stroke(random(55),random(55),random(255));
        stroke(0, 0, 0, map(lum, 0, 1, 100, 10));        
        line(x1, y1, x2, y2);                
      }
      x = x2;
      y = y2;
    }
    }  
    fill(clr);
    noStroke();
    beginShape();
    while (a < TWO_PI) {
      vertex(x, y);
      float v = random(0.85, 1);
      x = x + r * cos(angle + a) * u * v;
      y = y + r * sin(angle + a) * u * v;
      a += PI / 180;
      for (int i = 0; i < 2; i++) {
        r += sin(a * components[i]);
      }
    }
    endShape(CLOSE);
    if (x < 0 || x > width ||y < 0 || y > height) {
      angle += HALF_PI;
    }
    x += 2 * cos(angle);
    y += 2 * sin(angle);
    angle += random(-0.15, 0.15);
  }
}
